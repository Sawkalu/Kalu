//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use '../../sass/resolvers';
@use '../../sass/theme';
@use '../../tokens';
@use './fab-shared-theme';

$surface-theme: tokens.md-comp-fab-surface-values();

@function _resolve-theme($theme, $resolvers) {
  @return fab-shared-theme.resolve-theme($theme, $resolvers);
}

@mixin small-surface-theme() {
  $small-surface-theme: tokens.md-comp-fab-surface-small-values();
  @include theme($small-surface-theme);
}

@mixin large-surface-theme() {
  $large-surface-theme: tokens.md-comp-fab-surface-large-values();
  @include theme($large-surface-theme);
}

@mixin small-primary-theme() {
  $small-primary-theme: tokens.md-comp-fab-primary-small-values();
  @include theme($small-primary-theme);
}

@mixin primary-theme() {
  $primary-theme: tokens.md-comp-fab-primary-values();
  @include theme($primary-theme);
}

@mixin large-primary-theme() {
  $large-primary-theme: tokens.md-comp-fab-primary-large-values();
  @include theme($large-primary-theme);
}

@mixin small-secondary-theme() {
  $small-secondary-theme: tokens.md-comp-fab-secondary-small-values();
  @include theme($small-secondary-theme);
}

@mixin secondary-theme() {
  $secondary-theme: tokens.md-comp-fab-secondary-values();
  @include theme($secondary-theme);
}

@mixin large-secondary-theme() {
  $large-secondary-theme: tokens.md-comp-fab-secondary-large-values();
  @include theme($large-secondary-theme);
}

@mixin branded-theme() {
  $branded-theme: tokens.md-comp-fab-branded-values();
  @include theme($branded-theme);
}

@mixin large-branded-theme() {
  $large-branded-theme: tokens.md-comp-fab-branded-large-values();
  @include theme($large-branded-theme);
}

@mixin theme($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme($surface-theme, $theme);
  $theme: _resolve-theme($theme, $resolvers);
  $theme: theme.create-theme-vars($theme, fab);

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles($surface-theme, $theme);
  $theme: _resolve-theme($theme, $resolvers);
  $theme: theme.create-theme-vars($theme, fab);

  @include fab-shared-theme.theme-styles($theme);

  @include _set-container-dimensions(
    map.get($theme, container-width),
    map.get($theme, container-height)
  );
}

@mixin _set-container-dimensions($width, $height) {
  width: $width;
  height: $height;
}
