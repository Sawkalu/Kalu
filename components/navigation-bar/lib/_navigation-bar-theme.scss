//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use '../../elevation/lib/elevation-theme';
@use '../../sass/theme';
@use '../../sass/resolvers';
@use 'third_party/javascript/material_web_components/m3/navigation_tab/lib/navigation-tab-theme';
@use '@material/theme/map-ext';
@use '@material/theme/theme-color';
@use '@material/theme/shadow-dom';
@use '@material/typography/typography';
@use '@material/theme/keys';

$light-theme: (
  active-focus-icon-color: theme-color.$on-secondary,
  active-focus-label-text-color: theme-color.$on-surface,
  active-focus-state-layer-color: theme-color.$on-surface,
  active-hover-icon-color: theme-color.$on-secondary,
  active-hover-label-text-color: theme-color.$on-surface,
  active-hover-state-layer-color: theme-color.$on-surface,
  active-icon-color: theme-color.$on-secondary,
  active-indicator-color: theme-color.$secondary,
  active-indicator-height: 32px,
  active-indicator-shape: 16px,
  active-indicator-width: 64px,
  active-label-text-color: theme-color.$on-surface,
  active-large-badge-color: theme-color.$on-secondary,
  active-large-badge-label-color: theme-color.$secondary,
  active-large-badge-outline-color: theme-color.$secondary,
  active-pressed-icon-color: theme-color.$on-secondary,
  active-pressed-label-text-color: theme-color.$on-surface,
  active-pressed-state-layer-color: theme-color.$on-surface,
  badge-color: theme-color.$error,
  badge-outline-color: theme-color.$surface,
  badge-outline-width: 2px,
  badge-shape: 3px,
  badge-size: 6px,
  container-color: theme-color.$surface,
  container-elevation: 1,
  container-height: 80px,
  container-shadow-color: #000,
  container-shape: 0,
  container-surface-tint-layer-color: null,
  focus-state-layer-opacity: 0.24,
  hover-state-layer-opacity: 0.16,
  icon-size: 24px,
  inactive-focus-icon-color: theme-color.$on-surface,
  inactive-focus-label-text-color: theme-color.$on-surface,
  inactive-focus-state-layer-color: theme-color.$on-surface,
  inactive-hover-icon-color: theme-color.$on-surface,
  inactive-hover-label-text-color: theme-color.$on-surface,
  inactive-hover-state-layer-color: theme-color.$on-surface,
  inactive-icon-color: theme-color.$on-surface,
  inactive-label-text-color: theme-color.$on-surface,
  inactive-large-badge-color: theme-color.$error,
  inactive-large-badge-label-color: theme-color.$on-error,
  inactive-large-badge-outline-color: theme-color.$surface,
  inactive-pressed-icon-color: theme-color.$on-surface,
  inactive-pressed-label-text-color: theme-color.$on-surface,
  inactive-pressed-state-layer-color: theme-color.$on-surface,
  label-text-font: typography.get-font(overline),
  label-text-size: 12px,
  label-text-tracking: typography.px-to-rem(0.1px),
  label-text-weight: typography.get-weight(overline),
  large-badge-color: theme-color.$error,
  large-badge-label-color: theme-color.$on-error,
  large-badge-label-font-family: typography.get-font(overline),
  large-badge-label-font-size: 11px,
  large-badge-label-letter-spacing: normal,
  large-badge-label-line-height: 13px,
  large-badge-label-weight: typography.get-weight(overline),
  large-badge-outline-width: 2px,
  large-badge-shape: 8px,
  large-badge-size: 16px,
  pressed-state-layer-opacity: 0.2,
);

@mixin theme($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme($light-theme, $theme);
  @if shadow-dom.$css-selector-fallback-declarations {
    @include theme-styles($theme);
  }
  $theme: elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (container-elevation)
  );
  $theme: theme.create-theme-vars($theme, 'navigation-bar');

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles(
    $light-theme,
    $theme,
    $require-all: false
  );
  $theme: elevation-theme.resolve-theme(
    $theme,
    map.get($resolvers, elevation),
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (container-elevation)
  );

  .md3-navigation-tab {
    @include navigation-tab-theme.theme-styles(
      map-ext.pick($theme, map.keys(navigation-tab-theme.$light-theme)...)
    );
  }

  $theme: theme.create-theme-vars($theme, 'navigation-bar');

  @include _container-color(map.get($theme, container-color));
  @include _container-shape(map.get($theme, container-shape));
  @include _container-height(map.get($theme, container-height));
  @include elevation-theme.theme-styles(
    (
      shadow: map.get($theme, container-elevation-shadow),
      overlay-opacity: map.get($theme, container-elevation-overlay-opacity),
      surface-tint-layer-color:
        map.get($theme, container-surface-tint-layer-color),
    )
  );
}

@mixin _container-color($color) {
  background-color: $color;
}

@mixin _container-height($height) {
  height: $height;
}

@mixin _container-shape($shape-radius) {
  border-radius: $shape-radius;
}
