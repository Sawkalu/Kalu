//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

@use 'sass:map';

@use '@material/web/ripple/ripple-theme';
@use '@material/web/sass/color';
@use '@material/web/sass/resolvers';
@use '@material/web/sass/theme';
@use '@material/web/tokens';

@use './icon-button-theme';

$_custom-property-prefix: 'filled-tonal-icon-button';

$light-theme: tokens.md-comp-filled-tonal-icon-button-values();
$dark-theme: tokens.md-comp-filled-tonal-icon-button-values(
  (
    md-sys-color: tokens.md-sys-color-values-dark-dynamic(),
  ),
  $exclude-hardcoded-values: true
);

@mixin theme($theme) {
  $theme: theme.validate-theme($light-theme, $theme);
  $theme: icon-button-theme.flatten-disabled-colors(
    $theme,
    $variant: 'filled-tonal'
  );
  $theme: theme.create-theme-vars($theme, $_custom-property-prefix);

  @include theme.emit-theme-vars($theme);
}

@mixin theme-styles($theme, $resolvers: resolvers.$material) {
  $theme: theme.validate-theme-styles($light-theme, $theme);
  $theme: icon-button-theme.flatten-disabled-colors(
    $theme,
    $variant: 'filled-tonal'
  );
  $theme: theme.create-theme-vars($theme, $_custom-property-prefix);

  @include icon-button-theme.state-layer-size(
    map.get($theme, 'container-size')
  );
  @include icon-button-theme.state-layer-shape(
    map.get($theme, 'container-shape')
  );
  @include icon-button-theme.icon-size(map.get($theme, 'icon-size'));

  @include icon-button-theme.icon-color(
    (
      default: map.get($theme, 'icon-color'),
      disabled: map.get($theme, 'disabled-icon-color'),
      focus: map.get($theme, 'focus-icon-color'),
      hover: map.get($theme, 'hover-icon-color'),
      pressed: map.get($theme, 'pressed-icon-color'),
    )
  );

  @include icon-button-theme.container-color(
    (
      default: map.get($theme, 'container-color'),
      disabled: map.get($theme, 'disabled-container-color'),
    )
  );

  @include ripple-theme.theme(
    (
      focus-state-layer-color: map.get($theme, 'focus-state-layer-color'),
      focus-state-layer-opacity: map.get($theme, 'focus-state-layer-opacity'),
      hover-state-layer-color: map.get($theme, 'hover-state-layer-color'),
      hover-state-layer-opacity: map.get($theme, 'hover-state-layer-opacity'),
      pressed-state-layer-color: map.get($theme, 'pressed-state-layer-color'),
      pressed-state-layer-opacity:
        map.get($theme, 'pressed-state-layer-opacity'),
    )
  );

  &.md3-icon-button--toggle-filled-tonal {
    @include icon-button-theme.icon-color(
      (
        default: map.get($theme, 'toggle-unselected-icon-color'),
        disabled: map.get($theme, 'disabled-icon-color'),
        focus: map.get($theme, 'toggle-unselected-focus-icon-color'),
        hover: map.get($theme, 'toggle-unselected-hover-icon-color'),
        pressed: map.get($theme, 'toggle-unselected-pressed-icon-color'),
      )
    );

    @include icon-button-theme.container-color(
      (
        default: map.get($theme, 'unselected-container-color'),
        disabled: map.get($theme, 'disabled-container-color'),
      )
    );

    @include ripple-theme.theme(
      (
        focus-state-layer-color:
          map.get($theme, 'toggle-unselected-focus-state-layer-color'),
        hover-state-layer-color:
          map.get($theme, 'toggle-unselected-hover-state-layer-color'),
        pressed-state-layer-color:
          map.get($theme, 'toggle-unselected-pressed-state-layer-color'),
      )
    );
  }

  &.md3-icon-button--on {
    @include icon-button-theme.icon-color(
      (
        default: map.get($theme, 'toggle-selected-icon-color'),
        disabled: map.get($theme, 'disabled-icon-color'),
        focus: map.get($theme, 'toggle-selected-focus-icon-color'),
        hover: map.get($theme, 'toggle-selected-hover-icon-color'),
        pressed: map.get($theme, 'toggle-selected-pressed-icon-color'),
      )
    );

    @include icon-button-theme.container-color(
      (
        default: map.get($theme, 'selected-container-color'),
        disabled: map.get($theme, 'disabled-container-color'),
      )
    );

    @include ripple-theme.theme(
      (
        focus-state-layer-color:
          map.get($theme, 'toggle-selected-focus-state-layer-color'),
        hover-state-layer-color:
          map.get($theme, 'toggle-selected-hover-state-layer-color'),
        pressed-state-layer-color:
          map.get($theme, 'toggle-selected-pressed-state-layer-color'),
      )
    );
  }
}
